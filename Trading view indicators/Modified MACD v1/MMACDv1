//@version=4
study(title="Jamallo s - Modified MACD", resolution="")
// Getting inputs
fast_length = input(title="Fast Length", type=input.integer, defval=12)
slow_length = input(title="Slow Length", type=input.integer, defval=26)
lr_length = input(title="Lr Length", type=input.integer, defval=200)
signalLen = input(defval=21, type=input.integer, title="Signal Length")
src = input(title="Source", type=input.source, defval=close)

// Calculating
fast_ma = ema(src, fast_length)
slow_ma = ema(src, slow_length)
macd = fast_ma - slow_ma

lr = linreg(macd, lr_length, 0)

plot(macd, title="MACD", color=macd>lr ? color.green : color.red, transp=50)
plot(lr, color=lr<macd ? color.teal : color.maroon, style=plot.style_circles, transp=0)

pr1=percentile_linear_interpolation(macd,200, 90)
pr3=percentile_linear_interpolation(macd,200, 10)
pr4=percentile_linear_interpolation(macd,200, 99)
pr6=percentile_linear_interpolation(macd,200, 1)

p1=plot(pr1, color=color.red, display=display.none)
p2=plot(pr3, color=color.green, display=display.none)
p3=plot(pr4, color=color.red, display=display.none)
p4=plot(pr6, color=color.green, display=display.none)

fill(p1, p3, color=color.maroon, transp=40)
fill(p2, p4, color=color.teal, transp=40)

//pr2=percentile_linear_interpolation(macd,200, 50)
//p5=plot(pr2, color=color.white)

cc = sma(close,signalLen)
oo = sma(open,signalLen)
hh = sma(high,signalLen)
ll = sma(low,signalLen)
lv = abs(cc-oo)/(hh - ll)
a = 0.0
plusOne = nz(a[1], macd)

a := lv*macd+(1-lv) * plusOne

plot(a, title="signal")
